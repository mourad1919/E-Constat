{"version":3,"file":"src_app_login_login_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEd;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kDAAS;KACrB;CACF,CAAC;IAMW,sBAAsB,SAAtB,sBAAsB;;AAAtB,sBAAsB;IAJlC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,sBAAsB;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AChBM;AACM;AACF;AAEA;AAEmB;AAEvB;AACoC;IAYhE,eAAe,SAAf,eAAe;;AAAf,eAAe;IAV3B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,yEAAsB;YACtB,qFAAsB;SACvB;QACD,YAAY,EAAE,CAAC,kDAAS,CAAC;KAC1B,CAAC;GACW,eAAe;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBsB;AACT;AACQ;AACZ;AACkB;IAO1C,SAAS,SAAT,SAAS;IAGpB,YAAoB,WAAuB,EAAS,MAAa,EAAS,eAA+B;QAArF,gBAAW,GAAX,WAAW,CAAY;QAAS,WAAM,GAAN,MAAM,CAAO;QAAS,oBAAe,GAAf,eAAe,CAAgB;QAFzG,SAAI,GAAM,IAAI,6CAAI,EAAE,CAAC;QACrB,QAAG,GAAQ,CAAC,CAAC;IACgG,CAAC;IAE9G,QAAQ;IACR,CAAC;IACK,SAAS;;YACb,IAAG,IAAI,CAAC,GAAG,IAAE,CAAC,EAAC;gBACb,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;oBAC9C,MAAM,EAAE,OAAO;oBACf,SAAS,EAAE,YAAY;oBACvB,OAAO,EAAE,gCAAgC;oBACzC,OAAO,EAAE,CAAC,IAAI,CAAC;iBAChB,CAAC,CAAC;gBAEH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;aACvB;QAEH,CAAC;KAAA;IACD,UAAU;QAER,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAC,EAAE;YAC9E,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;YACrC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC;YAE5C,IAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,EAAC;gBAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;aAClC;iBAAK;gBACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;aACpC;QACH,CAAC,EAAC,CAAC,GAAG,EAAC,EAAE;YACP,IAAI,CAAC,GAAG,GAAC,CAAC,CAAC;YACX,IAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;IACN,CAAC;;;;;;;AApCW,SAAS;IALrB,wDAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,kEAAgC;;KAEjC,CAAC;GACW,SAAS;AAAA","sources":["./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\nimport { RegistrationPageModule } from '../registration/registration.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule,\n    RegistrationPageModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { User } from '../model/user';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.css'],\n})\nexport class LoginPage implements OnInit {\n  user:User=new User();\n  err:number=0;\n  constructor(private authService:AuthService,private router:Router,private alertController:AlertController) { }\n\n  ngOnInit() {\n  }\n  async loginfail(){\n    if(this.err==1){\n      const alert = await this.alertController.create({\n        header: 'Alert',\n        subHeader: 'Login Fail',\n        message: 'Incorrect username or password',\n        buttons: ['OK'],\n      });\n  \n      await alert.present();\n    }\n    \n  }\n  onLoggedin()\n  {\n    console.log(this.err)\n    this.authService.login(this.user.username,this.user.password).subscribe((data)=> {\n      let jwToken = data.body.access_token;\n      this.authService.saveToken(jwToken || '{}');\n      \n      if(this.authService.isAdmin()){\n        this.router.navigate(['/admin']); \n      }else {\n        this.router.navigate(['/welcome']); \n      }            \n    },(err)=>{ \n      this.err=1;\n      this.loginfail();\n    });\n }\n \n\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}